module(mirth-tests.std-prelude)
import(std.prelude)
import(std.test)
import(std.str)

def main {
    +Tests.Start!

    "id" test (
        1 id => (1)
        1 2 id => (2) => (1)
        1 2 3 id => (3) => (2) => (1)
        1 2 3 4 id => (4) => (3) => (2) => (1)

        "A" id => ("A")
        "A" "B" id => ("B") => ("A")
        "A" "B" "C" id => ("C") => ("B") => ("A")
        "A" "B" "C" "D" id => ("D") => ("C") => ("B") => ("A")
    )

    "swap" test (
        1 2 swap => (1) => (2)
        1 2 3 swap => (2) => (3) => (1)
        "foo" "bar" swap => ("foo") => ("bar")
        "foo" "bar" "baz" swap => ("bar") => ("baz") => ("foo")
    )

    "dup" test (
        1 dup => (1) => (1)
        1 2 dup => (2) => (2) => (1)
        "foo" dup => ("foo") => ("foo")
        "foo" "bar" dup => ("bar") => ("bar") => ("foo")
     )
    "drop" test (
        1 2 drop => (1)
        1 2 3 drop => (2) => (1)
        1 2 3 4 drop => (3) => (2) => (1)
        1 2 3 4 5 drop => (4) => (3) => (2) => (1)
        "A" "B" drop => ("A")
        "A" "B""C" drop => ("B") => ("A")
    )
    "dip" test (
        1 2 dip(1+) => (2) => (2)
        1 2 3 dip(swap) => (3) => (1) => (2)
        "A" "B" "C" dip(cat) => ("C") => ("AB")
    )

    "run" test (
        1 [1+] run => (2)
        1 [2 +] run => (3)
        2 [3 +] run => (5)
        3 [1+] run => (4)
    )

    "Int.+" test (
        10 20 + => (30)
        20 30 + => (50)
        10 -1 + => (9)
        -1 0 + => (-1)
    )

    "Int.-" test (
        10 20 - => (-10)
        20 31 - => (-11)
        10 -1 - => (11)
        -1 0 - => (-1)
    )

    "Int.*" test (
        10 20 * => (200)
        10 -2 * => (-20)
        -1 -3 * => (3)
        0 10000 * => (0)
    )

    "Int./%" test (
        10 3 /% => (1) => (3)   10 -3 /% => (-2) => (-4)
         9 3 /% => (0) => (3)    9 -3 /% => ( 0) => (-3)
         8 3 /% => (2) => (2)    8 -3 /% => (-1) => (-3)
         7 3 /% => (1) => (2)    7 -3 /% => (-2) => (-3)
         6 3 /% => (0) => (2)    6 -3 /% => ( 0) => (-2)
         5 3 /% => (2) => (1)    5 -3 /% => (-1) => (-2)
         4 3 /% => (1) => (1)    4 -3 /% => (-2) => (-2)
         3 3 /% => (0) => (1)    3 -3 /% => ( 0) => (-1)
         2 3 /% => (2) => (0)    2 -3 /% => (-1) => (-1)
         1 3 /% => (1) => (0)    1 -3 /% => (-2) => (-1)
         0 3 /% => (0) => (0)    0 -3 /% => ( 0) => ( 0)
        -1 3 /% => (2) => (-1)  -1 -3 /% => (-1) => ( 0)
        -2 3 /% => (1) => (-1)  -2 -3 /% => (-2) => ( 0)
        -3 3 /% => (0) => (-1)  -3 -3 /% => ( 0) => ( 1)
        -4 3 /% => (2) => (-2)  -4 -3 /% => (-1) => ( 1)
        -5 3 /% => (1) => (-2)  -5 -3 /% => (-2) => ( 1)
        -6 3 /% => (0) => (-2)  -6 -3 /% => ( 0) => ( 2)
        -7 3 /% => (2) => (-3)  -7 -3 /% => (-1) => ( 2)
        -8 3 /% => (1) => (-3)  -8 -3 /% => (-2) => ( 2)
        -9 3 /% => (0) => (-3)  -9 -3 /% => ( 0) => ( 3)
       -10 3 /% => (2) => (-4) -10 -3 /% => (-1) => ( 3)
    )

    +Tests.end!
}

# mirth-test # pout # 10 tests passed.
