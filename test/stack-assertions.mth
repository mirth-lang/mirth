module(mirth-tests.stack-assertions)
import(std.prelude)

def(ok-1, Int Str -- Str Int Str,
    id
    {Int Str} swap {Str Int} swap {Int Str} tuck {Str Int Str})

def(ok-2, a b -- b a b,
    id
    {a b} swap {b a} swap {a b} tuck {b a b})

def(ok-3, a b -- b a b,
    id
    {a _} swap {_ a} swap {_ b} tuck {b _ b})

def(ok-4, a b -- b a b,
    id
    {a ?myb} swap {? a} swap {?foo b} tuck {b ?bar b})

def(bad-1, Int Str -- Str Int Str,
    id
    {Int Str} swap {Int Int} swap {Int Str} tuck {Str Str Str})

def(bad-2, a b -- b a b,
    id
    {a b} swap {a a} swap {a b} tuck {b b b})

def(bad-3, a b -- b a b,
    id
    {a _} swap {a a} swap {_ _} tuck {b b b})

def(non-exhaustive, a b c d -- a b c d,
    id
    {a b c d}
    {b c d}
    {c d}
    {d})

def(non-exhaustive-reverse, a b c d -- a b c d,
    id
    {a b c d}
    {a b c}
    {a b}
    {a})

def(main, --, id)
# mirth-test # merr # 22:20: error: Failed to unify Str with Int
# mirth-test # merr # 22:50: error: Failed to unify Int with Str
# mirth-test # merr # 26:16: error: Failed to unify b with a
# mirth-test # merr # 26:38: error: Failed to unify a with b
# mirth-test # merr # 30:16: error: Failed to unify b with a
# mirth-test # merr # 30:38: error: Failed to unify a with b
# mirth-test # merr # 35:5: error: Failed to unify [a] with []
# mirth-test # merr # 36:5: error: Failed to unify [a b] with []
# mirth-test # merr # 37:5: error: Failed to unify [a b c] with []
# mirth-test # merr # 42:5: error: Failed to unify [a] with []
# mirth-test # merr # 42:5: error: Failed to unify b with a
# mirth-test # merr # 42:5: error: Failed to unify c with b
# mirth-test # merr # 42:5: error: Failed to unify d with c
# mirth-test # merr # 43:5: error: Failed to unify [a b] with []
# mirth-test # merr # 43:5: error: Failed to unify c with a
# mirth-test # merr # 43:5: error: Failed to unify d with b
# mirth-test # merr # 44:5: error: Failed to unify [a b c] with []
# mirth-test # merr # 44:5: error: Failed to unify d with a
# mirth-test # mret # 1
