type A
type B(x)
data A
  moo : a B(a) -- A
end
data B(x)
  foo(f: x -- Str) : B(x)
  bar(f: A -- A) : B(x)
end
A->str : A -- Str
A->str = match(moo -> match(foo(f) -> f, bar(f) -> bar(f) moo f A->str))
str->A : Str -- A
str->A = foo(id) moo
str->A A->str == id
