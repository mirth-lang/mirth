module test.int-literals

import std.prelude
import std.test

def main {
    +Tests.Start!
    "dec" test (
        0 show => ("0")
        1 show => ("1")
        10 show => ("10")
        12 show => ("12")
        100 show => ("100")
        123 show => ("123")
        -0 show => ("0")
        -1 show => ("-1")
        -10 show => ("-10")
        -12 show => ("-12")
        -100 show => ("-100")
        -123 show => ("-123")
    )
    "hex" test (
        0x0 show => ("0")
        0x1 show => ("1")
        0x10 show => ("16")
        0x12 show => ("18")
        0x100 show => ("256")
        0x123 show => ("291")
        -0x0 show => ("0")
        -0x1 show => ("-1")
        -0x10 show => ("-16")
        -0x12 show => ("-18")
        -0x100 show => ("-256")
        -0x123 show => ("-291")
    )
    "oct" test (
        0o0 show => ("0")
        0o1 show => ("1")
        0o10 show => ("8")
        0o12 show => ("10")
        0o100 show => ("64")
        0o123 show => ("83")
        -0o0 show => ("0")
        -0o1 show => ("-1")
        -0o10 show => ("-8")
        -0o12 show => ("-10")
        -0o100 show => ("-64")
        -0o123 show => ("-83")
    )

    "u8" test (
        0u8 U8.>Int show => ("0")
        1u8 U8.>Int show => ("1")
        2u8 U8.>Int show => ("2")
        10u8 U8.>Int show => ("10")
        12u8 U8.>Int show => ("12")
        100u8 U8.>Int show => ("100")
        123u8 U8.>Int show => ("123")
        255u8 U8.>Int show => ("255")
        -0u8 U8.>Int show => ("0")

        0x0u8 U8.>Int show => ("0")
        0x1u8 U8.>Int show => ("1")
        0x2u8 U8.>Int show => ("2")
        0x10u8 U8.>Int show => ("16")
        0x12u8 U8.>Int show => ("18")
        0xA0u8 U8.>Int show => ("160")
        0xFFu8 U8.>Int show => ("255")
        -0x0u8 U8.>Int show => ("0")

        0o0u8 U8.>Int show => ("0")
        0o1u8 U8.>Int show => ("1")
        0o2u8 U8.>Int show => ("2")
        0o10u8 U8.>Int show => ("8")
        0o12u8 U8.>Int show => ("10")
        0o100u8 U8.>Int show => ("64")
        0o123u8 U8.>Int show => ("83")
        0o377u8 U8.>Int show => ("255")
        -0o0u8 U8.>Int show => ("0")
    )

    "i8" test (
        0i8 I8.>Int show => ("0")
        1i8 I8.>Int show => ("1")
        2i8 I8.>Int show => ("2")
        10i8 I8.>Int show => ("10")
        12i8 I8.>Int show => ("12")
        100i8 I8.>Int show => ("100")
        123i8 I8.>Int show => ("123")
        127i8 I8.>Int show => ("127")
        -0i8 I8.>Int show => ("0")
        -1i8 I8.>Int show => ("-1")
        -2i8 I8.>Int show => ("-2")
        -10i8 I8.>Int show => ("-10")
        -12i8 I8.>Int show => ("-12")
        -100i8 I8.>Int show => ("-100")
        -123i8 I8.>Int show => ("-123")
        -128i8 I8.>Int show => ("-128")

        0x0i8 I8.>Int show => ("0")
        0x1i8 I8.>Int show => ("1")
        0x2i8 I8.>Int show => ("2")
        0x10i8 I8.>Int show => ("16")
        0x12i8 I8.>Int show => ("18")
        0x7Fi8 I8.>Int show => ("127")
        -0x0i8 I8.>Int show => ("0")
        -0x0i8 I8.>Int show => ("0")
        -0x1i8 I8.>Int show => ("-1")
        -0x2i8 I8.>Int show => ("-2")
        -0x10i8 I8.>Int show => ("-16")
        -0x12i8 I8.>Int show => ("-18")
        -0x80i8 I8.>Int show => ("-128")

        0o0i8 I8.>Int show => ("0")
        0o1i8 I8.>Int show => ("1")
        0o2i8 I8.>Int show => ("2")
        0o10i8 I8.>Int show => ("8")
        0o12i8 I8.>Int show => ("10")
        0o100i8 I8.>Int show => ("64")
        0o123i8 I8.>Int show => ("83")
        0o177i8 I8.>Int show => ("127")
        -0o0i8 I8.>Int show => ("0")
        -0o1i8 I8.>Int show => ("-1")
        -0o2i8 I8.>Int show => ("-2")
        -0o10i8 I8.>Int show => ("-8")
        -0o12i8 I8.>Int show => ("-10")
        -0o100i8 I8.>Int show => ("-64")
        -0o123i8 I8.>Int show => ("-83")
        -0o200i8 I8.>Int show => ("-128")
    )

    "u16" test (
        0u16 U16.>Int show => ("0")
        1u16 U16.>Int show => ("1")
        2u16 U16.>Int show => ("2")
        10u16 U16.>Int show => ("10")
        12u16 U16.>Int show => ("12")
        100u16 U16.>Int show => ("100")
        123u16 U16.>Int show => ("123")
        65535u16 U16.>Int show => ("65535")
        -0u16 U16.>Int show => ("0")

        0x0u16 U16.>Int show => ("0")
        0x1u16 U16.>Int show => ("1")
        0x2u16 U16.>Int show => ("2")
        0x10u16 U16.>Int show => ("16")
        0x12u16 U16.>Int show => ("18")
        0xA0u16 U16.>Int show => ("160")
        0xFFFFu16 U16.>Int show => ("65535")
        -0x0u16 U16.>Int show => ("0")

        0o0u16 U16.>Int show => ("0")
        0o1u16 U16.>Int show => ("1")
        0o2u16 U16.>Int show => ("2")
        0o10u16 U16.>Int show => ("8")
        0o12u16 U16.>Int show => ("10")
        0o100u16 U16.>Int show => ("64")
        0o123u16 U16.>Int show => ("83")
        0o177777u16 U16.>Int show => ("65535")
        -0o0u16 U16.>Int show => ("0")
    )

    "i16" test (
        0i16 I16.>Int show => ("0")
        1i16 I16.>Int show => ("1")
        2i16 I16.>Int show => ("2")
        10i16 I16.>Int show => ("10")
        12i16 I16.>Int show => ("12")
        100i16 I16.>Int show => ("100")
        123i16 I16.>Int show => ("123")
        32767i16 I16.>Int show => ("32767")
        -0i16 I16.>Int show => ("0")
        -1i16 I16.>Int show => ("-1")
        -2i16 I16.>Int show => ("-2")
        -10i16 I16.>Int show => ("-10")
        -12i16 I16.>Int show => ("-12")
        -100i16 I16.>Int show => ("-100")
        -123i16 I16.>Int show => ("-123")
        -32768i16 I16.>Int show => ("-32768")

        0x0i16 I16.>Int show => ("0")
        0x1i16 I16.>Int show => ("1")
        0x2i16 I16.>Int show => ("2")
        0x10i16 I16.>Int show => ("16")
        0x12i16 I16.>Int show => ("18")
        0x7FFFi16 I16.>Int show => ("32767")
        -0x0i16 I16.>Int show => ("0")
        -0x0i16 I16.>Int show => ("0")
        -0x1i16 I16.>Int show => ("-1")
        -0x2i16 I16.>Int show => ("-2")
        -0x10i16 I16.>Int show => ("-16")
        -0x12i16 I16.>Int show => ("-18")
        -0x8000i16 I16.>Int show => ("-32768")

        0o0i16 I16.>Int show => ("0")
        0o1i16 I16.>Int show => ("1")
        0o2i16 I16.>Int show => ("2")
        0o10i16 I16.>Int show => ("8")
        0o12i16 I16.>Int show => ("10")
        0o100i16 I16.>Int show => ("64")
        0o123i16 I16.>Int show => ("83")
        0o77777i16 I16.>Int show => ("32767")
        -0o0i16 I16.>Int show => ("0")
        -0o1i16 I16.>Int show => ("-1")
        -0o2i16 I16.>Int show => ("-2")
        -0o10i16 I16.>Int show => ("-8")
        -0o12i16 I16.>Int show => ("-10")
        -0o100i16 I16.>Int show => ("-64")
        -0o123i16 I16.>Int show => ("-83")
        -0o100000i16 I16.>Int show => ("-32768")
    )

    "u32" test (
        0u32 U32.>Int show => ("0")
        1u32 U32.>Int show => ("1")
        2u32 U32.>Int show => ("2")
        10u32 U32.>Int show => ("10")
        12u32 U32.>Int show => ("12")
        100u32 U32.>Int show => ("100")
        123u32 U32.>Int show => ("123")
        4294967295u32 U32.>Int show => ("4294967295")
        -0u32 U32.>Int show => ("0")

        0x0u32 U32.>Int show => ("0")
        0x1u32 U32.>Int show => ("1")
        0x2u32 U32.>Int show => ("2")
        0x10u32 U32.>Int show => ("16")
        0x12u32 U32.>Int show => ("18")
        0xA0u32 U32.>Int show => ("160")
        0xFFFFFFFFu32 U32.>Int show => ("4294967295")
        -0x0u32 U32.>Int show => ("0")

        0o0u32 U32.>Int show => ("0")
        0o1u32 U32.>Int show => ("1")
        0o2u32 U32.>Int show => ("2")
        0o10u32 U32.>Int show => ("8")
        0o12u32 U32.>Int show => ("10")
        0o100u32 U32.>Int show => ("64")
        0o123u32 U32.>Int show => ("83")
        0o37777777777u32 U32.>Int show => ("4294967295")
        -0o0u32 U32.>Int show => ("0")
    )

    "i32" test (
        0i32 I32.>Int show => ("0")
        1i32 I32.>Int show => ("1")
        2i32 I32.>Int show => ("2")
        10i32 I32.>Int show => ("10")
        12i32 I32.>Int show => ("12")
        100i32 I32.>Int show => ("100")
        123i32 I32.>Int show => ("123")
        2147483647i32 I32.>Int show => ("2147483647")
        -0i32 I32.>Int show => ("0")
        -1i32 I32.>Int show => ("-1")
        -2i32 I32.>Int show => ("-2")
        -10i32 I32.>Int show => ("-10")
        -12i32 I32.>Int show => ("-12")
        -100i32 I32.>Int show => ("-100")
        -123i32 I32.>Int show => ("-123")
        -2147483648i32 I32.>Int show => ("-2147483648")

        0x0i32 I32.>Int show => ("0")
        0x1i32 I32.>Int show => ("1")
        0x2i32 I32.>Int show => ("2")
        0x10i32 I32.>Int show => ("16")
        0x12i32 I32.>Int show => ("18")
        0x7FFFFFFFi32 I32.>Int show => ("2147483647")
        -0x0i32 I32.>Int show => ("0")
        -0x0i32 I32.>Int show => ("0")
        -0x1i32 I32.>Int show => ("-1")
        -0x2i32 I32.>Int show => ("-2")
        -0x10i32 I32.>Int show => ("-16")
        -0x12i32 I32.>Int show => ("-18")
        -0x80000000i32 I32.>Int show => ("-2147483648")

        0o0i32 I32.>Int show => ("0")
        0o1i32 I32.>Int show => ("1")
        0o2i32 I32.>Int show => ("2")
        0o10i32 I32.>Int show => ("8")
        0o12i32 I32.>Int show => ("10")
        0o100i32 I32.>Int show => ("64")
        0o123i32 I32.>Int show => ("83")
        0o17777777777i32 I32.>Int show => ("2147483647")
        -0o0i32 I32.>Int show => ("0")
        -0o1i32 I32.>Int show => ("-1")
        -0o2i32 I32.>Int show => ("-2")
        -0o10i32 I32.>Int show => ("-8")
        -0o12i32 I32.>Int show => ("-10")
        -0o100i32 I32.>Int show => ("-64")
        -0o123i32 I32.>Int show => ("-83")
        -0o20000000000i32 I32.>Int show => ("-2147483648")
    )


    "u64" test (
        0u64 U64.>Int-unsafe show => ("0")
        1u64 U64.>Int-unsafe show => ("1")
        2u64 U64.>Int-unsafe show => ("2")
        10u64 U64.>Int-unsafe show => ("10")
        12u64 U64.>Int-unsafe show => ("12")
        100u64 U64.>Int-unsafe show => ("100")
        123u64 U64.>Int-unsafe show => ("123")
        9223372036854775807u64 U64.>Int-unsafe show => ("9223372036854775807")
        -0u64 U64.>Int-unsafe show => ("0")

        0x0u64 U64.>Int-unsafe show => ("0")
        0x1u64 U64.>Int-unsafe show => ("1")
        0x2u64 U64.>Int-unsafe show => ("2")
        0x10u64 U64.>Int-unsafe show => ("16")
        0x12u64 U64.>Int-unsafe show => ("18")
        0xA0u64 U64.>Int-unsafe show => ("160")
        0x7FFFFFFFFFFFFFFFu64 U64.>Int-unsafe show => ("9223372036854775807")
        #0xFFFFFFFFFFFFFFFFu64 U64.>Int-unsafe show => ("")
        -0x0u64 U64.>Int-unsafe show => ("0")

        0o0u64 U64.>Int-unsafe show => ("0")
        0o1u64 U64.>Int-unsafe show => ("1")
        0o2u64 U64.>Int-unsafe show => ("2")
        0o10u64 U64.>Int-unsafe show => ("8")
        0o12u64 U64.>Int-unsafe show => ("10")
        0o100u64 U64.>Int-unsafe show => ("64")
        0o123u64 U64.>Int-unsafe show => ("83")
        0o777777777777777777777u64 U64.>Int-unsafe show => ("9223372036854775807")
        -0o0u64 U64.>Int-unsafe show => ("0")
    )

    "i64" test (
        0i64 I64.>Int show => ("0")
        1i64 I64.>Int show => ("1")
        2i64 I64.>Int show => ("2")
        10i64 I64.>Int show => ("10")
        12i64 I64.>Int show => ("12")
        100i64 I64.>Int show => ("100")
        123i64 I64.>Int show => ("123")
        9223372036854775807i64 I64.>Int show => ("9223372036854775807")
        -0i64 I64.>Int show => ("0")
        -1i64 I64.>Int show => ("-1")
        -2i64 I64.>Int show => ("-2")
        -10i64 I64.>Int show => ("-10")
        -12i64 I64.>Int show => ("-12")
        -100i64 I64.>Int show => ("-100")
        -123i64 I64.>Int show => ("-123")
        -9223372036854775807i64 I64.>Int show => ("-9223372036854775807")
      #  -9223372036854775808 I64.>Int show => ("-9223372036854775808")

        0x0i64 I64.>Int show => ("0")
        0x1i64 I64.>Int show => ("1")
        0x2i64 I64.>Int show => ("2")
        0x10i64 I64.>Int show => ("16")
        0x12i64 I64.>Int show => ("18")
        0x7FFFFFFFFFFFFFFFi64 I64.>Int show => ("9223372036854775807")
        -0x0i64 I64.>Int show => ("0")
        -0x0i64 I64.>Int show => ("0")
        -0x1i64 I64.>Int show => ("-1")
        -0x2i64 I64.>Int show => ("-2")
        -0x10i64 I64.>Int show => ("-16")
        -0x12i64 I64.>Int show => ("-18")
        -0x7FFFFFFFFFFFFFFFi64 I64.>Int show => ("-9223372036854775807")
      #  -0x8000000000000000i64 I64.>Int show => ("-9223372036854775808")

        0o0i64 I64.>Int show => ("0")
        0o1i64 I64.>Int show => ("1")
        0o2i64 I64.>Int show => ("2")
        0o10i64 I64.>Int show => ("8")
        0o12i64 I64.>Int show => ("10")
        0o100i64 I64.>Int show => ("64")
        0o123i64 I64.>Int show => ("83")
        0o777777777777777777777i64 I64.>Int show => ("9223372036854775807")
        -0o0i64 I64.>Int show => ("0")
        -0o1i64 I64.>Int show => ("-1")
        -0o2i64 I64.>Int show => ("-2")
        -0o10i64 I64.>Int show => ("-8")
        -0o12i64 I64.>Int show => ("-10")
        -0o100i64 I64.>Int show => ("-64")
        -0o123i64 I64.>Int show => ("-83")
        -0o777777777777777777777i64 I64.>Int show => ("-9223372036854775807")
       # -0o100000000000000000000i64 I64.>Int show => ("-9223372036854775808")
    )

    end!
}
# mirth-test # pout # 11 tests passed.
