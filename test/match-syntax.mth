module(test.match-syntax)

import(std.prelude)
import(std.maybe)
import(std.list)

def(Maybe.mysum, Maybe(Int) -- Int, { None -> 0 } { Some -> id })
def List.mysum {
    { Nil -> 0 }
    { Cons -> dip'(mysum) + }
}

def List.very-slow-reverse {
    match {
        { Nil -> List.Nil }
        { Cons -> swap dip(very-slow-reverse) List.Snoc }
    }
}

def Maybe.another-match-1 {
    match (
        { Some -> Some }
        { None -> None }
    )
}

def Maybe.another-match-2 {
    match {
        Some -> Some,
        None -> None
    }
}

def main {}
