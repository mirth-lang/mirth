# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

export base/order
  type Comp
  type Order(k)

  MkOrder(cp: k k -- k k Comp) : Order(k)

  cmp? (o: Order(k)) : k k -- k k Comp
  lt?  (o: Order(k)) : k k -- k k Bool
  gt?  (o: Order(k)) : k k -- k k Bool
  eq?  (o: Order(k)) : k k -- k k Bool
  le?  (o: Order(k)) : k k -- k k Bool
  ge?  (o: Order(k)) : k k -- k k Bool

  cmp  (o: Order(k)) : k k -- Comp
  lt   (o: Order(k)) : k k -- Bool
  gt   (o: Order(k)) : k k -- Bool
  eq   (o: Order(k)) : k k -- Bool
  le   (o: Order(k)) : k k -- Bool
  ge   (o: Order(k)) : k k -- Bool

  LT : Comp
  EQ : Comp
  GT : Comp

  cmplt? : Comp -- Comp Bool
  cmple? : Comp -- Comp Bool
  cmpeq? : Comp -- Comp Bool
  cmpge? : Comp -- Comp Bool
  cmpgt? : Comp -- Comp Bool

  cmplt : Comp -- Bool
  cmple : Comp -- Bool
  cmpeq : Comp -- Bool
  cmpge : Comp -- Bool
  cmpgt : Comp -- Bool

  cmpelim (lt: *a -- *b, eq: *a -- *b, gt: *a -- *b) : *a Comp -- *b
  mkcmp? (l?: a a -- a a Bool) : a a -- a a Comp
  mkcmp  (l?: a a -- a a Bool) : a a -- Comp

  max (ord: Order(a)) : a a -- a
  min (ord: Order(a)) : a a -- a
end

data Comp
  LT : Comp
  EQ : Comp
  GT : Comp
end

cmpelim(lt, eq, gt) = match(LT -> lt, EQ -> eq, GT -> gt)
cmplt? = dup cmplt
cmple? = dup cmple
cmpeq? = dup cmpeq
cmpge? = dup cmpge
cmpgt? = dup cmplt
cmplt = cmpelim(true, false, false)
cmple = cmpelim(true, true, false)
cmpeq = cmpelim(false, true, false)
cmpge = cmpelim(false, true, true)
cmpgt = cmpelim(false, false, true)
mkcmp?(l?) = cond(l? -> LT, swap?(l?) -> GT, EQ)
mkcmp (l?) = mkcmp?(l?) dip(drop2)

data Order(k)
  MkOrder(f: k k -- k k Comp) : Order(k)
end

cmp? (ord) = ord match(MkOrder(f) -> f)
lt?  (ord) = cmp?(ord) cmplt
gt?  (ord) = cmp?(ord) cmpgt
eq?  (ord) = cmp?(ord) cmpeq
le?  (ord) = cmp?(ord) cmple
ge?  (ord) = cmp?(ord) cmpge

cmp  (ord) = cmp?(ord) dip(drop2)
lt   (ord) = lt? (ord) dip(drop2)
gt   (ord) = gt? (ord) dip(drop2)
eq   (ord) = eq? (ord) dip(drop2)
le   (ord) = le? (ord) dip(drop2)
ge   (ord) = ge? (ord) dip(drop2)

max(ord) = lt?(ord) if(nip, drop)
min(ord) = gt?(ord) if(nip, drop)

