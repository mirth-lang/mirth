# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

import base/list
import base/path

||| A re-export of all the unsafe primitive functions with nicer types.
export base/unsafe
  type Path
  unsafe_panic     : *a Str -- *b
  unsafe_exit      : *a Int -- *b
  unsafe_trace     : Str --
  unsafe_print     : Str --
  unsafe_walk      : Path -- List(Pack(Path List(Path) List(Path)))
  unsafe_listdir   : Path -- List(Path)
  unsafe_listdirs  : Path -- List(Path) # list directories recursively
  unsafe_listfiles : Path -- List(Path) # list files recursively
  unsafe_isdir     : Path -- Bool
  unsafe_isfile    : Path -- Bool
  unsafe_read      : Path -- Str
  unsafe_write     : Str Path --
  unsafe_append    : Str Path --
  unsafe_deletefile : Path --
  unsafe_coerce    : *a -- *b   # the big unsafe!
  unsafe_env_get  (n: Str) : t
  unsafe_env_set  (n: Str) : t --
end

unsafe_panic = _prim_unsafe_panic
unsafe_trace = _prim_unsafe_trace
unsafe_print = _prim_unsafe_print

unsafe_listdir   = path->str _prim_unsafe_listdir map(str->path)
unsafe_walk      = path->str _prim_unsafe_walk map(
  unpack3 dip2(str->path) both(map(str->path)) pack3)
unsafe_listdirs  = path->str _prim_unsafe_walk lbind(
  unpack3 drop dip(str->path) formap(dip(dup) str->path </>) nip)
unsafe_listfiles = path->str _prim_unsafe_walk lbind(
  unpack3 nip  dip(str->path) formap(dip(dup) str->path </>) nip)
unsafe_isdir     = path->str _prim_unsafe_isdir
unsafe_isfile    = path->str _prim_unsafe_isfile
unsafe_read      = path->str _prim_unsafe_read
unsafe_write     = path->str _prim_unsafe_write
unsafe_append    = path->str _prim_unsafe_append
unsafe_deletefile = path->str _prim_unsafe_deletefile

unsafe_coerce = _prim_unsafe_coerce

unsafe_exit = _prim_unsafe_exit
unsafe_env_get(n) = n _prim_unsafe_env_get
unsafe_env_set(n) = n _prim_unsafe_env_set
