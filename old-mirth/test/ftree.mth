
data Node(a)
  Node2 : a a -- Node(a)
  Node3 : a a a -- Node(a)
end

nodeMap(f: a -- b) : Node(a) -- Node(b)
nodeMap(f) =
  match(
    Node2 -> dip(f) f Node2,
    Node3 -> dip2(f) dip(f) f Node3
  )

nodeFor(f: *x a -- *x) : *x Node(a) -- *x
nodeFor(f) =
  match(
    Node2 -> dip(f) f,
    Node3 -> dip2(f) dip(f) f
  )

||| Finger tree.
data FTree(a)
  FTSmall : List(a) -- FTree(a)
  FTLarge : List(a) FTree(Node(a)) List(a) -- FTree(a)
end

ftreeMap(f: a -- b) : FTree(a) -- FTree(b)
ftreeMap(f) =
  match(
    FTSmall -> map(f) FTSmall,
    FTLarge -> dip2(map(f)) dip(ftreeMap(nodeMap(f))) map(f) FTLarge
  )

ftreeFor(f: *x a -- *x) : *x FTree(a) -- *x
ftreeFor(f) =
  match(
    FTSmall -> for(f),
    FTLarge -> dip2(for(f)) dip(ftreeFor(nodeFor(f))) for(f)
  )

