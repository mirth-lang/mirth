module(mirth/data/common)
import(prelude)

# mirth/data/string
nominal(StrLit, Int)

# mirth/data/name
data NameValue
    DEF_MODULE -> Module,
    DEF_TYPE -> Type,
    DEF_TAG -> Tag,
    DEF_PRIM -> Prim,
    DEF_WORD -> Word,
    DEF_BUFFER -> Buffer,
    DEF_EXTERNAL -> External,
end
table(Name)
field(name-value, Name, NameValue)

# mirth/data/buffer
table(Buffer)
field(buffer-size, Buffer, Size)
field(buffer-base, Buffer, Ptr)
field(buffer-name, Buffer, Name)

# mirth/data/module
table(Module)
table(Token)
field(module-name, Module, Name)
field(module-start, Module, Token)
field(module-end, Module, Token)

# mirth/data/location
nominal(Row, Int)
nominal(Col, Int)
nominal(Location, [Module Row Col])

# mirth/data/token
data TokenValue
    TOKEN_NONE
    TOKEN_COMMA
    TOKEN_NEWLINE
    TOKEN_LPAREN -> Token
    TOKEN_RPAREN -> Token
    TOKEN_LBRACKET -> Token
    TOKEN_RBRACKET -> Token
    TOKEN_LBRACE -> Token
    TOKEN_RBRACE -> Token
    TOKEN_INT -> Int
    TOKEN_STR -> StrLit
    TOKEN_NAME -> Name
end
field(token-value, Token, TokenValue)
field(token-module, Token, Module)
field(token-row, Token, Row)
field(token-col, Token, Col)

# mirth/data/type
data Type
    TYPE_ERROR
    TYPE_DONT_CARE
    TYPE_UNIT
    TPrim -> PrimType
    TMeta -> MetaVar
    THole -> Name
    TVar -> Var
    TTable -> Table
    TNominal -> Nominal
    TData -> Data
    TTensor -> Type Type
    TMorphism -> Type Type
    TApp -> Type Type
    TParam -> List(Type) Type
end

data PrimType
    PRIM_TYPE_TYPE
    PRIM_TYPE_STACK
    PRIM_TYPE_EFFECT
    PRIM_TYPE_INT
    PRIM_TYPE_PTR
    PRIM_TYPE_BOOL
    PRIM_TYPE_U64
    PRIM_TYPE_U32
    PRIM_TYPE_U16
    PRIM_TYPE_U8
    PRIM_TYPE_I64
    PRIM_TYPE_I32
    PRIM_TYPE_I16
    PRIM_TYPE_I8
end

table(MetaVar)
table(Nominal)
table(Data)
table(Tag)
table(Ctx)

field(meta-is-defined, MetaVar, Bool)
field(meta-type-raw, MetaVar, Type)

field(nominal-type, Nominal, Type)
field(nominal-name, Nominal, Name)
field(nominal-arity, Nominal, Int)

field(data-header, Data, Token)
field(data-name, Data, Name)
field(data-arity, Data, Int)
field(data-tags, Data, Tag)

field(tag-data, Tag, Data)
field(tag-name, Tag, Name)
field(tag-sig, Tag, Token)
field(tag-has-sig, Tag, Bool)
field(tag-sig-is-checked, Tag, Bool)
field(tag-ctx, Tag, Ctx)
field(tag-type, Tag, Type)
field(tag-next, Tag, Tag)

# mirth/data/var
table(Var)
field(var-is-implicit, Var, Bool)
field(var-name, Var, Name)
field(var-type, Var, Type)

# mirth/data/type
table(Subst)
field(subst-rest, Subst, Subst)
field(subst-var, Subst, Var)
field(subst-type, Subst, Type)

# mirth/data/ctx
field(ctx-prev, Ctx, Ctx)
field(ctx-var, Ctx, Var)

# mirth/data/external
table(External)
field(external-name, External, Name)
field(external-type, External, Type)
field(external-sig, External, Token)
field(external-sig-is-checked, External, Bool)
field(external-ctx, External, Ctx)

# mirth/data/arrow
table(Arrow)
table(Args)
nominal(Arg, Arrow)
data Op
    OP_NONE
    OP_PRIM -> Prim
    OP_WORD -> Word
    OP_EXTERNAL -> External
    OP_BUFFER -> Buffer
    OP_INT -> Int
    OP_STR -> StrLit
    OP_TAG -> Tag
    OP_MATCH -> Match
end

field(arrow-token, Arrow, Token)
field(arrow-ctx, Arrow, Ctx)
field(arrow-dom, Arrow, Type)
field(arrow-next, Arrow, Arrow)
field(arrow-op, Arrow, Op)
field(arrow-subst, Arrow, Subst)
field(arrow-args, Arrow, Args)
field(args-head, Args, Arg)
field(args-tail, Args, Args)

# mirth/data/prim
table(Prim)
field(prim-name, Prim, Name)
field(prim-ctx, Prim, Ctx)
field(prim-type, Prim, Type)

# mirth/data/word
table(Word)
field(word-name, Word, Name)
field(word-sig, Word, Token)
field(word-body, Word, Token)
field(word-ctx, Word, Ctx)
field(word-type, Word, Type)
field(word-arrow, Word, Arrow)
field(word-sig-is-checked, Word, Bool)
field(word-body-is-checked, Word, Bool)

# mirth/data/table
table(Table)
table(Field)
field(table-name, Table, Name)
field(table-num-buffer, Table, Buffer)
field(table-max-count, Table, Size)
field(field-name, Field, Name)
field(field-table, Field, Table)
field(field-type, Field, Type)
field(field-buffer, Field, Buffer)
field(field-word-ptr, Field, Word)

# mirth/data/data
table(Match)
table(Case)
nominal(Pattern, Tag)
field(match-ctx, Match, Ctx)
field(match-dom, Match, Type)
field(match-cod, Match, Type)
field(match-token, Match, Token)
field(match-cases, Match, Case)
field(case-match, Case, Match)
field(case-token, Case, Token)
field(case-pattern, Case, Pattern)
field(case-subst, Case, Subst)
field(case-mid, Case, Type)
field(case-body, Case, Arrow)
field(case-next, Case, Case)
