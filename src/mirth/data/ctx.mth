module(mirth/data/ctx)
import(mirth/data/common)
import(mirth/data/var)

###########
# Context #
###########

# A context for types and terms.

ctx-new! : Ctx Var -- Ctx
ctx-new! = (
    Ctx.alloc!
    tuck ctx-var!
    tuck ctx-prev!
)

ctx-name@ : Ctx -- Name
ctx-name@ = ctx-var@ var-name@

ctx-empty : Ctx
ctx-empty = 0 cast

ctx-is-empty : Ctx -- Bool
ctx-is-empty = ctx-empty ==

ctx-is-empty? : Ctx -- Ctx Bool
ctx-is-empty? = dup ctx-is-empty

ctx-has-name : Name Ctx -- Bool
ctx-has-name =
    ctx-is-empty? if(
        drop2 false,
        dup ctx-name@ dip(over) == if(
            drop2 true,
            ctx-prev@ ctx-has-name
        )
    )

ctx-has-name? : Name Ctx -- Name Ctx Bool
ctx-has-name? = dup2 ctx-has-name

ctx-lookup : Name Ctx -- Var
ctx-lookup =
    ctx-is-empty? if(
        drop2 VAR_ERROR,
        ctx-var? var-name@ dip(over) == if(
            ctx-var@ nip,
            ctx-prev@ ctx-lookup
        )
    )

ctx-lookup? : Name Ctx -- Name Ctx Var
ctx-lookup? = dup2 ctx-lookup

ctx-length : Ctx -- Size
ctx-length = 0 swap while(ctx-is-empty? not, dip(1+) ctx-prev@) drop

ctx-length? : Ctx -- Ctx Size
ctx-length? = dup ctx-length
