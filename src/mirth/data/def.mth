module(mirth.data.def)

import(prelude)
import(data.maybe)
import(mirth.data.alias)
import(mirth.data.type)
import(mirth.data.token)
import(mirth.data.word)
import(mirth.data.external)
import(mirth.data.table)
import(mirth.data.variable)
import(mirth.data.constant)
import(mirth.data.buffer)

data(Def,
    DEF_NONE,
    DEF_ALIAS -> Alias,
    DEF_MODULE -> Module,
    DEF_TYPE -> Type,
    DEF_TAG -> Tag,
    DEF_PRIM -> Prim,
    DEF_WORD -> Word,
    DEF_BUFFER -> Buffer,
    DEF_VARIABLE -> Variable,
    DEF_CONSTANT -> Constant,
    DEF_EXTERNAL -> External,
    DEF_FIELD -> Field)

def(Def>Module?, Def -- Maybe(Module),
    DEF_NONE -> NONE,
    DEF_ALIAS -> >head .module SOME,
    DEF_MODULE -> drop NONE,
    DEF_TYPE -> drop NONE,
    DEF_TAG -> tag-data @ data-header @ map(.module),
    DEF_PRIM -> drop NONE,
    DEF_WORD -> word-head @ .module SOME,
    DEF_BUFFER -> head .module SOME,
    DEF_VARIABLE -> variable-head @ .module SOME,
    DEF_CONSTANT -> constant-head @ .module SOME,
    DEF_EXTERNAL -> external-sig @ .module SOME,
    DEF_FIELD -> field-head @ .module SOME)

def(Def.is-none, Def -- Bool,
    DEF_NONE -> T,
    _ -> drop F)
