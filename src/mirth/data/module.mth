module(mirth/data/module)
import(mirth/data/common)
import(mirth/data/path)

Module->Int : Module -- Int
Module->Int = cast

Int->Module : Int -- Module
Int->Module = cast

MAX_MODULES : Size
MAX_MODULES = 0x200

MODULE_PATH_SIZE : Size
MODULE_PATH_SIZE = 0x200

buffer(MODULE_PATH_BUF, 0x40000)

module-alloc! : Module
module-alloc! = Module.alloc!

module-new! : Path -- Module
module-new! = (
    module-alloc!
    tuck module-path!
)

module-path& : Module -- Ptr
module-path& = Module->Int MODULE_PATH_SIZE * MODULE_PATH_BUF ptr+

module-path@ : Module -- Path
module-path@ = module-path& Ptr->Str Str->Path

module-path? : Module -- Module Path
module-path? = dup module-path@

module-path! : Path Module --
module-path! =
    over Path->Str str-length MODULE_PATH_SIZE >= if(
        "Module path is too long!" panic!,
        dip(Path->Str) module-path& str-copy!
    )

# Load a source path associated with a module into STR_BUF.
load-module-source-path! : Module --
load-module-source-path! =
    module-path@ load-source-path!
