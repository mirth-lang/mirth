module(mirth.data.module)
import(mirth.data.common)
import(data.path)

Module->Int : Module -- Int
Module->Int = cast

Int->Module : Int -- Module
Int->Module = cast

module-alloc! : Module
module-alloc! = Module.alloc!

module-new! : Path -- Module
module-new! = (
    module-alloc!
    tuck module-path!
)

||| Get source path associated with module.
module-source-path : Module -- Path
module-source-path =
    is-nil? if(
        drop "<generated>" Str->Path,
        module-path@ make-source-path
    )

||| Get expected module path from module name, relative to src.
module-path-from-name : Name -- Path
module-path-from-name =
    name-str@ str-transduce(
        is-dot? if(
            drop path-separator TS_COPY,
        is-upper? if(
            U8->Int 32 + Int->U8 TS_CHAR,
            TS_CHAR
#            "--///error///--" TS_COPY
        ))
    ) ".mth" str-cat Str->Path
