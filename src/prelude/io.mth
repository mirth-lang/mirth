module(prelude/io)
import(prelude/common)
import(prelude/str)

nominal(File, Int)
def(File->Int, File -- Int, cast)
def(Int->File, Int -- File, cast)
def(|File|, Size, 8)
def(file@, Ptr -- File, int@ Int->File)
def(file!, File Ptr --, dip(File->Int) int!)

def(stdin,  File, 0 Int->File)
def(stdout, File, 1 Int->File)
def(stderr, File, 2 Int->File)

def(str-write!, Str File -- +IO,
    File->Int swap dup str-length posix-write!)

def(str-print!, Str -- +IO, stdout str-write!)
def(str-trace!, Str -- +IO, stderr str-write!)
def(str-print-sp!, Str -- +IO, str-print! print-sp!)
def(str-trace-sp!, Str -- +IO, str-trace! trace-sp!)
def(str-print-ln!, Str -- +IO, str-print! print-ln!)
def(str-trace-ln!, Str -- +IO, str-trace! trace-ln!)

def(str-buf-write!, File -- +StrBuf, File->Int STR_BUF str-buf-length? posix-write!)
def(str-buf-print!, +StrBuf, stdout str-buf-write!)
def(str-buf-trace!, +StrBuf, stderr str-buf-write!)
def(str-buf-read!, File -- +IO,
    File->Int str-buf-clear!
    STR_BUF STR_BUF_SIZE 1- posix-read!
    dup 0< if(
        "str-buf-read! failed" panic! drop,
        str-buf-length!
    ))
def(str-buf-input!, -- +IO, stdin str-buf-read!)

def(print-char!, Char -- +IO, str-buf-char! str-buf-print!)
def(trace-char!, Char -- +IO, str-buf-char! str-buf-trace!)

def(print-ln!, +IO, 10 Int->U8 print-char!)
def(trace-ln!, +IO, 10 Int->U8 trace-char!)
def(print-sp!, +IO, 32 Int->U8 print-char!)
def(trace-sp!, +IO, 32 Int->U8 trace-char!)
def(print-quote!, +IO, 34 Int->U8 print-char!)

def(int-write!, Int File -- +IO, dip(str-buf-int!) str-buf-write!)
def(int-print!, Int -- +IO, stdout int-write!)
def(int-trace!, Int -- +IO, stderr int-write!)
def(int-print-sp!, Int -- +IO, int-print! print-sp!)
def(int-trace-sp!, Int -- +IO, int-trace! trace-sp!)
def(int-print-ln!, Int -- +IO, int-print! print-ln!)
def(int-trace-ln!, Int -- +IO, int-trace! trace-ln!)

def(panic!, Str -- +IO,
    "panic: " str-trace! str-trace-ln! 1 posix-exit!)

def(open-file!, Str -- File +IO,
    0 0 posix-open!
    dup 0 < if("Failed to open file!" panic! Int->File, Int->File))

def(create-file!, Str -- File +IO,
    O_WRONLY|O_CREAT|O_TRUNC
    0x1B6
        # this is the default mode for creating a file
        # on unix, 666 in octal, i.e. owner can
        # read+write, everyone can read
    posix-open!
    dup 0 < if("Failed to create file!" panic! Int->File, Int->File))

def(O_WRONLY|O_CREAT|O_TRUNC, Int,
    RUNNING_OS MACOS = if(
        0x601, # O_WRONLY = 0x1, O_CREAT = 0x200, O_TRUNC = 0x400
    RUNNING_OS LINUX = if(
        0x241, # O_WRONLY = 0x1, O_CREAT = 0x40, O_TRUNC = 0x200
    RUNNING_OS WIN32 = if(
        0x301, # O_WRONLY = 0x1, O_CREAT|O_TRUNC = 0x300
        "O_WRONLY|O_CREAT|O_TRUNC not known for os" panic! 0
    ))))

def(close-file!, File -- +IO,
    File->Int posix-close!
    0 < if(
        "failed to close file" panic!,
        id
    ))
