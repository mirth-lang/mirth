module(mirth-tests.error-type-name-resolution)
import(std.prelude)

data(Int, MY_INT -> Str)
def(Foo, Int -- Maybe(Bool), id)
def(Bar, Str(Bool) -- BoOl, id)
def(Baz, Foo -- Int(a), id)
def(List, List -- Str, id)
def(main, --, id)
# mirth-test # merr # 5:10: error: Ambiguous type. Can't decide between: std.prim.Int, mirth-tests.error-type-name-resolution.Int
# mirth-test # merr # 5:17: error: Not visible in current scope: std.maybe.Maybe/1
# mirth-test # merr # 6:10: error: std.prim.Str expects 0 arguments, but got 1.
# mirth-test # merr # 6:23: error: Unknown type name, possibly a misspelling.
# mirth-test # merr # 7:10: error: Expected a type, but mirth-tests.error-type-name-resolution.Foo is not a type.
# mirth-test # merr # 7:17: error: Multiple definitions for name, but none are suitable: std.prim.Int expects 0 arguments, mirth-tests.error-type-name-resolution.Int expects 0 arguments
# mirth-test # merr # 8:11: error: Multiple definitions for name, but none are suitable: std.list.List/1 expects 1 arguments, mirth-tests.error-type-name-resolution.List is not a type
# mirth-test # mret # 1
