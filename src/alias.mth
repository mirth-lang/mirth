module mirth.alias

import std.prelude
import std.maybe
import mirth.mirth
import mirth.token
import mirth.name
import mirth.def

table(Alias)
field(Alias.~head, Alias, Token)
field(Alias.~name, Alias, Name)
field(Alias.~arity, Alias, Int)
field(Alias.~qname, Alias, Prop(QName))
field(Alias.~target, Alias, Prop(Def))

def(Alias.head, Alias -- Token, ~head @)
def(Alias.qname-soft, Alias -- Maybe(QName), ~qname @? bind:ready?)
def(Alias.qname-hard, +Mirth Alias -- +Mirth QName, ~qname force!)
def(Alias.namespace-hard, +Mirth Alias -- +Mirth Namespace, qname-hard namespace)
def(Alias.name, Alias -- Name, ~name @)
def(Alias.arity, Alias -- Int, ~arity @)
def(Alias.target, +Mirth Alias -- +Mirth Def, ~target force!)

def(Alias.==, Alias Alias -- Bool, both(index) ==)
def(Alias.new!, +Mirth head:Token name:Name arity:Int -- +Mirth Alias,
    Alias.alloc!
    name> over ~name !
    head> over ~head !
    arity> over ~arity !
    dup Def.Alias register)
