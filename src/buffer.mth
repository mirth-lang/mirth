module mirth.buffer

import std.prelude
import std.maybe

import mirth.name
import mirth.def
import mirth.token
import mirth.mirth

# mirth/data/buffer
table Buffer

field(Buffer.~doc, Buffer, Maybe(Str))
field(Buffer.~head, Buffer, Token)
field(Buffer.~size, Buffer, Size)
field(Buffer.~name, Buffer, Name)
field(Buffer.~qname, Buffer, Prop(QName))

def Buffer.head [ +Mirth |- Buffer -- Token ] { ~head @ }
def Buffer.size [ +Mirth |- Buffer -- Size ] { ~size @ }
def Buffer.name [ +Mirth |- Buffer -- Name ] { ~name @ }
def Buffer.qname-soft [ +Mirth |- Buffer -- Maybe(QName) ] { ~qname try-force! }
def Buffer.qname-hard [ +Mirth |- Buffer -- QName ] { ~qname force! }

def Buffer.= [ Buffer Buffer -- Bool ] { both(index) = }

def Buffer.new! [ +Mirth |- head:Token size:Size name:Name doc:Maybe(Str) -- Buffer ] {
    Buffer.alloc!
    doc> over ~doc !
    size> over ~size !
    name> over ~name !
    head> over ~head !
}
