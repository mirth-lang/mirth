module mirth.buffer

import std.prelude
import std.maybe

import mirth.name
import mirth.def
import mirth.token
import mirth.mirth

# mirth/data/buffer
table Buffer

field(Buffer.~doc, Buffer, Maybe(Str))
field(Buffer.~head, Buffer, Token)
field(Buffer.~size, Buffer, USize)
field(Buffer.~name, Buffer, Name)
field(Buffer.~qname, Buffer, Prop(QName))

def(Buffer.head, +Mirth Buffer -- +Mirth Token, ~head @)
def(Buffer.size, +Mirth Buffer -- +Mirth USize, ~size @)
def(Buffer.name, +Mirth Buffer -- +Mirth Name, ~name @)
def(Buffer.qname-soft, +Mirth Buffer -- +Mirth Maybe(QName), ~qname try-force!)
def(Buffer.qname-hard, +Mirth Buffer -- +Mirth QName, ~qname force!)

def(Buffer.==, Buffer Buffer -- Bool, both(index) ==)

def Buffer.new! [ +Mirth head:Token size:USize name:Name doc:Maybe(Str) -- +Mirth Buffer ] {
    Buffer.alloc!
    doc> over ~doc !
    size> over ~size !
    name> over ~name !
    head> over ~head !
}
