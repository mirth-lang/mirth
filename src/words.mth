module(words)
import(prelude)
import(names)
import(types)
import(core)

def(init-words!, --,
    0 NUM_WORDS !)

#########
# WORDS #
#########

def-type(Word, U16)
def(Word->Int, Word -- Int, U16->Int)
def(Int->Word, Int -- Word, Int->U16)

def(MAX_WORDS, Size, 0x4000)
quad def-static-buffer(NUM_WORDS)
def(word-alloc!, Word +Words,
    NUM_WORDS @ dup 1+ NUM_WORDS !
    dup MAX_WORDS >= if(
        "compiler error: NUM_WORDS > MAX_WORDS" panic!,
        id
    )
    0 over word-name!
    0 over word-sig!
    0 over word-body!
    TYPE_ERROR over word-type!
    ctx-empty over word-ctx!
    0 over word-status!)

def(WORD_METADATA_SIZE, Size, 32)
MAX_WORDS WORD_METADATA_SIZE * def-static-buffer(WORD_METADATA_BUF)
def(word-metadata&, Word -- Ptr, Word->Int WORD_METADATA_SIZE * WORD_METADATA_BUF +)

def(word-name&, Word -- Ptr, word-metadata&)
def(word-name@, Word -- Name, word-name& u32@ U32->Int)
def(word-name!, Name Word --, dip(Int->U32) word-name& u32!)

def(word-sig&, Word -- Ptr, word-metadata& 4 +)
def(word-sig@, Word -- Token, word-sig& u32@ U32->Int)
def(word-sig!, Token Word --, dip(Int->U32) word-sig& u32!)

def(word-body&, Word -- Ptr, word-metadata& 8 +)
def(word-body@, Word -- Token, word-body& u32@ U32->Int)
def(word-body!, Token Word --, dip(Int->U32) word-body& u32!)

def(word-type&, Word -- Ptr, word-metadata& 12 +)
def(word-type@, Word -- Type, word-type& u32@)
def(word-type!, Type Word --, word-type& u32!)

def(word-ctx&, Word -- Ptr, word-metadata& 16 +)
def(word-ctx@, Word -- Ctx, word-ctx& u16@)
def(word-ctx!, Ctx Word --, word-ctx& u16!)

def-type(WordStatus, U16)

def(word-status&, Word -- Ptr, word-metadata& 20 +)
def(word-status@, Word -- WordStatus, word-status& u16@)
def(word-status!, WordStatus Word --, word-status& u16!)

def(word-sig-is-checked?, Word -- Word Bool,
    dup word-status@ U16->Int 1 &)
def(word-sig-is-checked!, Word --,
    dup dip(word-status@ U16->Int 1 | Int->U16) word-status!)

def(word-body-is-checked?, Word -- Word Bool,
    dup word-status@ U16->Int 2 & if(1, 0))
def(word-body-is-checked!, Word --,
    dup dip(word-status@ U16->Int 2 | Int->U16) word-status!)
