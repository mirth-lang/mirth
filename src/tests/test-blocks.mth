module(tests.test-blocks)
import(prelude)
import(platform.posix)
import(data.list)

def(run1, (a -- b) a -- b, run)
def(add10, [Int -- Int], [10 +])

def(add20, [Int -- Int],
    add10 add10 compose)

def(add30, [Int -- Int],
    add10 add20 compose)

def(mul2, [Int -- Int],
    [2 *])

def(mul2add10, [Int -- Int],
    mul2 add10 compose)

def(comprun(f,g), (*a -- *b, *b -- *c) *a -- *c,
    f g)

def(main, --,
    10 ??
    add10 run1 ??
    add10 run1 ??
    add20 run1 ??
    add30 run1 ??
    mul2add10 run1 ??
    comprun(2 *, 10 +) ??
    drop

    10 20 30 L3
    "[" over for(swap trace! trace! " ") drop "]" trace-ln!
    map(10 +)
    "[" over for(swap trace! trace! " ") drop "]" trace-ln!
    find(dup 25 >) match(
        SOME -> trace! " found" trace-ln!,
        NONE -> "not found" trace-ln!
    ))

# mirth-test # perr # ?? 10
# mirth-test # perr # ?? 20
# mirth-test # perr # ?? 30
# mirth-test # perr # ?? 50
# mirth-test # perr # ?? 80
# mirth-test # perr # ?? 170
# mirth-test # perr # ?? 350
# mirth-test # perr # [10 20 30]
# mirth-test # perr # [20 30 40]
# mirth-test # perr # 30 found
