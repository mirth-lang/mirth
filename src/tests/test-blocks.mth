module(tests.test-blocks)
import(prelude)
import(platform.posix)

run1 : a [a -- b] -- b
run1 = run

add10 : [Int -- Int]
add10 = [10 +]

compose : [*a -- *b] [*b -- *c] -- [*a -- *c]
compose = \([f] [g] -> [f g])

add20 : [Int -- Int]
add20 = add10 add10 compose

add30 : [Int -- Int]
add30 = add10 add20 compose

mul2 : [Int -- Int]
mul2 = [2 *]

mul2add10 : [Int -- Int]
mul2add10 = mul2 add10 compose

comprun : *a [*b -- *c] [*a -- *b] -- *c
comprun = \([f] [g] -> g f)

main : --
main = (
    10 ??
    add10 run1 ??
    add10 run1 ??
    add20 run1 ??
    add30 run1 ??
    mul2add10 run1 ??
    comprun(2 *, 10 +) ??
    drop

    10 20 30 L3
    "[" over for(swap str-trace! int-trace! " ") drop "]" str-trace-ln!
    map(10 +)
    "[" over for(swap str-trace! int-trace! " ") drop "]" str-trace-ln!
    find(dup 25 >) match(
        SOME -> int-trace! " found" str-trace-ln!,
        NONE -> "not found" str-trace-ln!
    )
)

target-c99("blocktest.c", main)
# mirth-test # perr # ?? 10
# mirth-test # perr # ?? 20
# mirth-test # perr # ?? 30
# mirth-test # perr # ?? 50
# mirth-test # perr # ?? 80
# mirth-test # perr # ?? 170
# mirth-test # perr # ?? 350
# mirth-test # perr # [10 20 30]
# mirth-test # perr # [20 30 40]
# mirth-test # perr # 30 found
