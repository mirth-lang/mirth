module(data.stack)

import(prelude)
import(data.maybe)

data(Stack(t),
    STACK_NIL,
    STACK_CONS -> t Stack(t))

def(stack-push!, t Mut(Stack(t)) --,
    modify(STACK_CONS))
def(stack-pop!, Mut(Stack(t)) -- Maybe(t),
    modify(stack-uncons))
def(stack-uncons, Stack(t) -- Maybe(t) Stack(t),
    STACK_NIL -> NONE STACK_NIL,
    STACK_CONS -> dip(SOME))
def(stack-reset!, Mut(Stack(t)) --,
    STACK_NIL swap !)
def(stack-is-empty, Stack(t) -- Bool,
    STACK_NIL -> true,
    STACK_CONS -> drop2 false)
