module std.set

import std.prelude
import std.buffer

def SET_INITIAL_SIZE [ Size ] { 256 bytes }

||| Represents a set as a bit string.
struct +Set {
    +buffer: +Buffer
    --
    def Empty [ -- +Set ] {
        SET_INITIAL_SIZE +Buffer.New >+buffer
        +Set
    }

    def rdrop [ +Set -- ] {
        /+Set
        +buffer> rdrop
    }

    def offset-mask [ Nat +Set -- Offset U8 +Set ] {
        8u divmod dip(>Offset)
        >U8-wrap 1u8 swap lshift
    }

    def member? [ Nat +Set -- Bool +Set ] {
        offset-mask +buffer(swap u8@) and >Int 0 <>
    }
    def insert! [ Nat +Set -- +Set ] {
        offset-mask +buffer(over u8@ or swap u8!)
    }
    def remove! [ Nat +Set -- +Set ] {
        offset-mask 0xFF >U8-wrap xor +buffer(over u8@ and swap u8!)
    }
}
