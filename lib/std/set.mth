module std.set

import std.prelude
import std.buffer

def(SET_INITIAL_SIZE, USize, 256u >USize)

||| Represents a set as a bit string.
struct +Set {
    +buffer: +Buffer
    --
    def Empty [ -- +Set ] {
        SET_INITIAL_SIZE +Buffer.new >+buffer
        +Set
    }

    def rdrop [ +Set -- ] {
        /+Set
        +buffer> rdrop
    }

    def offset-mask [ Nat +Set -- UOffset U8 +Set ] {
        8u divmod dip(>UOffset)
        >U8-wrap 1u8 swap lshift
    }

    def member? [ Nat +Set -- Bool +Set ] {
        offset-mask +buffer(swap @U8) and >Int 0 <>
    }
    def insert! [ Nat +Set -- +Set ] {
        offset-mask +buffer(over @U8 or swap !U8)
    }
    def remove! [ Nat +Set -- +Set ] {
        offset-mask 0xFF >U8-wrap xor +buffer(over @U8 and swap !U8)
    }
}
