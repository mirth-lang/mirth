module(std.set)

import(std.prelude)
import(std.buffer)

||| Represents a set as a bit string.
data(+Set, +Set -> +buffer: +Buffer)

def(SET_INITIAL_SIZE, Size, 256 >Size)

def(+Set.new, -- +Set,
    SET_INITIAL_SIZE +Buffer.new >+buffer
    +Set)

def(+Set.rdrop, +Set --,
    /+Set
    +buffer> rdrop)

def(+Set.offset-mask, Nat +Set -- Offset U8 +Set,
    8 >Nat /% over 1+ >Size +buffer:expand!
    dip(>Offset) 1 >Nat swap << >U8)

def(+Set.member?, Nat +Set -- Bool +Set,
    offset-mask +buffer(swap @U8) & >Int 0 <>)
def(+Set.insert!, Nat +Set -- +Set,
    offset-mask +buffer(over @U8 | swap !U8))
def(+Set.remove!, Nat +Set -- +Set,
    offset-mask 0xFF >U8 ^ +buffer(over @U8 & swap !U8))
