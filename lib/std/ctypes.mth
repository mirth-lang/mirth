module(std.ctypes)

import(std.prelude)

inline(
    def(CChar./CChar, CChar -- Int, CChar -> id)
    def(CIChar./CIChar, CIChar -- Int, CIChar -> id)
    def(CShort./CShort, CShort -- Int, CShort -> id)
    def(CInt./CInt, CInt -- Int, CInt -> id)
    def(CLong./CLong, CLong -- Int, CLong -> id)
    def(CLongLong./CLongLong, CLongLong -- Int, CLongLong -> id)
    def(CISize./CISize, CISize -- Int, CISize -> id)
    def(CIntPtr./CIntPtr, CIntPtr -- Int, CIntPtr -> id)

    def(CUChar./CUChar, CUChar -- Int, CUChar -> id)
    def(CUShort./CUShort, CUShort -- Int, CUShort -> id)
    def(CUInt./CUInt, CUInt -- Int, CUInt -> id)
    def(CULong./CULong, CULong -- Int, CULong -> id)
    def(CULongLong./CULongLong, CULongLong -- Int, CULongLong -> id)
    def(CUSize./CUSize, CUSize -- Int, CUSize -> id)
    def(CUIntPtr./CUIntPtr, CUIntPtr -- Int, CUIntPtr -> id)

    def(CUChar.nat, CUChar -- Nat, CUChar -> >Nat)
    def(CUShort.nat, CUShort -- Nat, CUShort -> >Nat)
    def(CUInt.nat, CUInt -- Nat, CUInt -> >Nat)
    def(CULong.nat, CULong -- Nat, CULong -> >Nat)
    def(CULongLong.nat, CULongLong -- Nat, CULongLong -> >Nat)
    def(CUSize.nat, CUSize -- Nat, CUSize -> >Nat)
    def(CUIntPtr.nat, CUIntPtr -- Nat, CUIntPtr -> >Nat)

    def(CUSize.>Size, CUSize -- Size, nat >Size)

    def(CPtr./CPtr, CPtr(t) -- Ptr, CPtr -> id)
    def(CConst./CConst, CConst(t) -- t, CConst -> id)
    def(CRestrict./CRestrict, CRestrict(t) -- t, CRestrict -> id)
    def(CVolatile./CVolatile, CVolatile(t) -- t, CVolatile -> id)

    def(CPtr.cast, CPtr(a) -- CPtr(b), CPtr -> CPtr)
    def(CPtr.>Ptr, CPtr(a) -- Ptr, CPtr -> id)
    def(Ptr.>CPtr, Ptr -- CPtr(a), CPtr)

    data(CStr, CStr -> CPtr(CConst(CChar)))

    def(Ptr.>CStr, Ptr -- CStr, CPtr CStr)
    def(CPtr.>CStr, CPtr(CConst(CChar)) -- CStr, CStr)
    def(CStr.>CPtr, CStr -- CPtr(CConst(CChar)), CStr -> id)
    def(CStr.>Ptr, CStr -- Ptr, >CPtr /CPtr)
    def-external(CStr.num-bytes -> strlen, +Unsafe CStr -- +Unsafe CUSize)
)
