||| ANSI terminal escape codes, and other terminal utilities.
module std.terminal

import std.prelude
import std.str
import std.byte

data(Sgr,
    Reset,
    Bold,
    Faint,
    Italic,
    Underline,
    SlowBlink,
    FastBlink,
    Invert,
    Conceal,
    Strike,

    PrimaryFont,
    Font2,
    Font3,
    Font4,
    Font5,
    Font6,
    Font7,
    Font8,
    Font9,
    Font10,
    Fraktur,

    DoubleUnderline,
    Normal,
    NotItalicOrBlackLetter,
    NotUnderline,
    NotBlink,
    Proportional,
    NotReversed,
    Reveal,
    NotStrike,

    FGBlack,
    FGRed,
    FGGreen,
    FGYellow,
    FGBlue,
    FGMagenta,
    FGCyan,
    FGWhite,
    FGColor -> SGRColor,
    FGDefault,

    BGBlack,
    BGRed,
    BGGreen,
    BGYellow,
    BGBlue,
    BGMagenta,
    BGCyan,
    BGWhite,
    BGColor -> SGRColor,
    BGDefault,

    NotProportional,
    Framed,
    Encircled,
    Overlined,
    NotFramedOrEncircled,
    NotOverlined,
    UnderlineColor -> SGRColor,
    DefaultUnderlineColor
    --
    def emit; [ Sgr +Str -- +Str ] {
        csi;
        dup enum-value show;
        match {
            { FGColor -> emit; }
            { BGColor -> emit; }
            { _ -> drop }
        }
        "m" ;
    }

    def span(f) [ (*a +Str -- *b +Str) *a Sgr +Str -- *b +Str ] {
        emit; f Sgr.Reset emit;
    }
)

data SGRColor {
    Numbered [ Int ]
    RGB [ Int Int Int ]
    --
    def emit; [ SGRColor +Str -- +Str ] {
        { Numbered -> ";5;" ; show; }
        { RGB -> ";2;" ; show; ";" ; show; ";" ; show; }
    }
}

def +Str.csi; [ +Str -- +Str ] {
    Byte.BESC push-byte-unsafe!
    Byte.BLSQUARE push-byte-unsafe!
}
